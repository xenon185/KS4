<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="http://structorizer.fisch.lu/" version="3.25-11" preRepeat="jusqu'à " postFor="à" preReturn="return" postForIn=" en " preWhile="tant que " output="écrire" input="lire " preFor="pour " preExit="exit" preLeave="leave" ignoreCase="true" preForIn="pour " stepFor=", pas = " text="&#34;Datenausgabe&#34;" comment="" color="ffffff" type="program" style="nice">
	<children>
		<instruction text="&#34;Init static variables&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<call text="&#34;void main(void){&#34;" comment="&#34;&#34;" color="c0c0c0" disabled="0"></call>
		<instruction text="&#34;init dynamic variables&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;CLOCK - Settings&#34;,&#34;&#34;,&#34;switch over to main quarz oscillator at 25MHz&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;PORTC - Define&#34;,&#34;&#34;,&#34;-DEN := 0x30&#34;,&#34;-DIR := 0x30&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;PORTP - Define&#34;,&#34;&#34;,&#34;-DEN := 0x02&#34;,&#34;-DIR := 0x02&#34;,&#34;&#34;,&#34;-GPIO_PORTP_AFSEL_R |= 0x02 //Enable alternative function&#34;,&#34;-GPIO_PORTP_PCTL_R |= 0x00000010&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;UART6 - Define&#34;,&#34;&#34;,&#34;//enable UART6&#34;,&#34;//7 databits&#34;,&#34;//enable even parity&#34;,&#34;//no stopbits&#34;,&#34;&#34;,&#34;UART6_LCRH_R |= (UART_LCRH_WLEN_7 | UART_LCRH_PEN | UART_LCRH_EPS)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;char text[] \\ init prep text&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;\\transmit text to hyper terminal&#34;,&#34;for(i=0; i&#60;sizeof(text); i++) {&#34;,&#34;		UART6_DR_R = text[i]; //Transmit a single char&#34;,&#34;		while(!(UART6_FR_R &amp; UART_FR_TXFE)); // Wait until char has been transmitted&#34;,&#34;	}&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;while(1) {} //Endless loop after transmitting&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<call text="&#34;}&#34;" comment="&#34;&#34;" color="c0c0c0" disabled="0"></call>
	</children>
</root>